# https://esphome.io/components/sensor/bme68x_bsec2
---
substitutions:
  bme680_prefix: ''

# To modify address or change default settings,
# you can add the following in your config that includes this package:
# bme68x_bsec2_i2c:
#   address: 0x76
bme68x_bsec2_i2c:
  model: bme680
  address: 0x77
  sample_rate: LP # sample every 3 seconds
  temperature_offset: 2.5Â°C
  # Default values
  # algorithm_output: classification
  # operating_age: 28d
  # supply_voltage: 3.3V
  # temperature_offset: 0
  # state_save_interval: 6h

sensor:
  - platform: bme68x_bsec2
    temperature:
      id: bme680_temperature
      name: ${bme680_prefix}Temperature
      on_raw_value:
        then:
          - sensor.template.publish:
              id: bme680_temperature_raw
              state: !lambda 'return x;'
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10 # Report every 30s (10 * 3s sample rate)
        - delta: 0.1
    pressure:
      id: bme680_pressure
      name: ${bme680_prefix}Pressure
      on_raw_value:
        then:
          - sensor.template.publish:
              id: bme680_pressure_raw
              state: !lambda 'return x;'
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10
        - delta: 0.1
    humidity:
      id: bme680_humidity
      name: ${bme680_prefix}Humidity
      on_raw_value:
        then:
          - sensor.template.publish:
              id: bme680_humidity_raw
              state: !lambda 'return x;'
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10
        - delta: 1
    gas_resistance:
      id: bme680_gas_resistance
      name: ${bme680_prefix}Gas Resistance
      disabled_by_default: true
      filters:
        - sliding_window_moving_average:
            window_size: 20
            send_every: 20
        - delta: 1
    iaq:
      id: bme680_iaq
      name: ${bme680_prefix}Indoor Air Quality
      on_raw_value:
        then:
          - sensor.template.publish:
              id: bme680_iaq_raw
              state: !lambda 'return x;'
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
        - delta: 1
    iaq_static:
      id: bme680_iaq_static
      name: ${bme680_prefix}IAQ Static
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
        - delta: 1
    iaq_accuracy:
      id: bme680_iaq_accuracy
      name: ${bme680_prefix}IAQ Accuracy
      disabled_by_default: true
      entity_category: diagnostic
    co2_equivalent:
      id: bme680_co2_equivalent
      name: ${bme680_prefix}CO2 Equivalent
      device_class: carbon_dioxide
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
        - delta: 0.1
    breath_voc_equivalent:
      id: bme680_breath_voc_equivalent
      name: ${bme680_prefix}Breath VOC Equivalent
      device_class: volatile_organic_compounds_parts
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 10
        - delta: 0.1

  - platform: template
    id: bme680_temperature_raw
    internal: true
  - platform: template
    id: bme680_pressure_raw
    internal: true
  - platform: template
    id: bme680_humidity_raw
    internal: true
  - platform: template
    id: bme680_iaq_raw
    internal: true

text_sensor:
  - platform: bme68x_bsec2
    iaq_accuracy:
      id: bme680_iaq_accuracy_text
      name: ${bme680_prefix}IAQ Accuracy
      entity_category: diagnostic
  - platform: template
    id: bme680_iaq_classification
    name: ${bme680_prefix}IAQ Classification
    icon: mdi:checkbox-marked-circle-outline
    lambda: !lambda |-
      if (int(id(bme680_iaq).state) <= 50) {
        return {"Excellent"};
      } else if (int(id(bme680_iaq).state) <= 100) {
        return {"Good"};
      } else if (int(id(bme680_iaq).state) <= 150) {
        return {"Lightly polluted"};
      } else if (int(id(bme680_iaq).state) <= 200) {
        return {"Moderately polluted"};
      } else if (int(id(bme680_iaq).state) <= 250) {
        return {"Heavily polluted"};
      } else if (int(id(bme680_iaq).state) <= 350) {
        return {"Severely polluted"};
      } else if (int(id(bme680_iaq).state) <= 500) {
        return {"Extremely polluted"};
      } else {
        return {"unknown"};
      }
